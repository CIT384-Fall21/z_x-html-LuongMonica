#! /bin/bash

# Current usage: ./cit384-url hostname port URI
# Future usage: ./cit384-url URL
# process_body is a flag that says whether to process the body
process_body=FALSE

# parse the URL:
#   current assumption
#       1. scheme is http (no encryption)
#       2. userinfo: anonymous
#       3. server_name: 
SERVER_NAME=$1
#       4. TCP_Port:    
PORT=$2
#       5. Path + Query = URI:  
URI=$3
#       6. Fragment (don't care about)

# future:
#URL="http://user:passwd@www.domain.com:6666/path/to/doc?var1=val1#fragment"
#URL="http://www.domain.com:6666/path/to/doc?var1=val1#fragment"
#URL="http://www.domain.com/path/to/doc?var1=val1#fragment"
#URL=$1
#SCHEME=$(echo $URL | awk -F[:] '{print $1}')
### this part only works if given URL in the format of 2nd URL 
    #SERVER_PORT=$(echo $URL | awk -F[/] '{print $3}')
    #SERVER_NAME=$(echo $SERVER_PORT | awk -F[:] '{print $1}')
    #PORT=$(echo $SERVER_PORT | awk -F[:] '{print $2}')
#URI_FRAG=/$(echo ${URL#*//*/})
#URI=$(echo ${URI_FRAG%#*})

# get ip addr of domain
IP=$(dig +short ${SERVER_NAME})
# add tail -1 if you have multiple aliases and want to get the last line, which is the IP
#IP=$(dig +short ${SERVER_NAME} | tail -1)

# build the request payload
cat <<EOF > /tmp/request
GET ${URI} HTTP/1.1
host: ${SERVER_NAME}

EOF

# establish a socket,
# send request
# receive payload
socket ${IP} ${PORT} < /tmp/request > /tmp/payload

# read the payload
while read name value ; do
    if [[ $name == "Content-type:" ]] ; then
        if [[ $value == "application/x-html" ]] ; then
            process_body=TRUE
        fi
    fi
done < /tmp/payload

# output the body of the request into /tmp/body
cat /tmp/payload | {
    read name value 
    while [[ -n $name ]] ; do
        read name value
    done
    # once you found the blank line
    while read line ; do
        echo $line
    done
} > /tmp/body

# based on content-type, do something
# for this script: if the content-type was application/x-html,
# we set the flag process_body to be true
# now we will base64 decode and uncompress if flag is true
if [[ $process_body == FALSE ]] ; then
    : # no op
else
    base64 -d | uncompress
fi < /tmp/body


